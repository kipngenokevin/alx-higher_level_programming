This is a test for 1-my_list.py module

	>>> MyList = __import__('1-my_list').MyList
	>>> my_list = MyList()
	>>> my_list.extend([4, 3, 5, 6, 1])
	>>> my_list.print_sorted()
	[1, 3, 4, 5, 6]

	>>> my_list.extend([4, 3, 5, 6, 1])
	>>> my_list.print_sorted()
	[1, 1, 3, 3, 4, 4, 5, 5, 6, 6]

	>>> my_list = MyList()
	>>> my_list.print_sorted()
	[]

	>>> my_list.extend([5])
	>>> my_list.print_sorted()
	[5]

	>>> my_list.extend([4, 3, 5, 6, 'eagle'])
	>>> my_list.print_sorted()
	Traceback (most recent call last):
		...
	TypeError: '<' not supported between instances of 'str' and 'int'

	# Test sorting with negative integers
	>>> my_list.clear()
	>>> my_list.extend([4, -3, 5, -6, 1])
	>>> my_list.print_sorted()
	[-6, -3, 1, 4, 5]

	# Test sorting with floats
	>>> my_list.clear()
	>>> my_list.extend([2.5, 1.0, 3.7, 2.0, 4.9])
	>>> my_list.print_sorted()
	[1.0, 2.0, 2.5, 3.7, 4.9]

	>>> my_list.clear()
	>>> my_list.extend([4, 1.0, -3, 5, 2.5])
	>>> my_list.print_sorted()
	[-3, 1.0, 2.5, 4, 5]

	# Test sorting with a list of all identical elements
	>>> my_list.clear()
	>>> my_list.extend([42] * 10)
	>>> my_list.print_sorted()
	[42, 42, 42, 42, 42, 42, 42, 42, 42, 42]

	# Test sorting with a list containing negative floats
	>>> my_list.clear()
	>>> my_list.extend([-3.5, -1.0, -4.2, -2.0, -0.5])
	>>> my_list.print_sorted()
	[-4.2, -3.5, -2.0, -1.0, -0.5]

	# Test sorting with a list containing both negative and positive floats
	>>> my_list.clear()
	>>> my_list.extend([2.0, -1.0, 4.5, -3.5, 0.5])
	>>> my_list.print_sorted()
	[-3.5, -1.0, 0.5, 2.0, 4.5]

	# Test sorting with a list of mixed data types (ints, floats, and strings)
	>>> my_list.clear()
	>>> my_list.extend([4, 3.5, 'apple', -2.0, 'banana', 1, 2.5])
	>>> my_list.print_sorted()
	Traceback (most recent call last):
		...
	TypeError: '<' not supported between instances of 'str' and 'float'
